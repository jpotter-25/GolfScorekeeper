Game View Not Indicating Waiting State Before Start

Issue: The host’s game UI currently doesn’t show a “waiting for players” state; instead it may jump straight into what looks like an active game (or even a solo game scene). Because the host’s client dealt cards immediately (due to the unintended local start), there was no indication that the table was waiting for other players to join. Meanwhile, the server had marked the room status as inGame_waiting with open seats, but the host’s UI didn’t reflect that. This can also confuse joining players – if their client somehow subscribes properly, they might see a waiting screen while the host did not, meaning UIs are out of sync with the actual game phase.

Expected: When a room is created or not yet full, the Game View should clearly show a waiting state. The server sets the room status to 'inGame_waiting' upon creation and keeps it there while there are open seats. The clients should detect this status and render a “Waiting for Players” screen with the room code and placeholders for empty seats. In the repository’s MultiplayerGame component, this is exactly what the conditional render does: if roomSnapshot.status === 'inGame_waiting', it shows a banner and lists each seat, labeling empty ones as “Waiting…”. This UI should be used for the host and all joined clients until the game auto-starts. Once the final player joins (seatsOpen = 0), the server should automatically transition the status to inGame_active, initialize the first round, and broadcast the starting snapshot. At that point, all clients should switch to the active Game Table view. There should be no manual “Start Game” button needed in this flow – the transition is automatic when the table is full (the code hints at removing the manual start logic with an auto-start trigger). In short, “inGame_waiting” status must be handled by showing a waiting room table (with empty seat placeholders and a count of players joined) until the server signals the game has begun.